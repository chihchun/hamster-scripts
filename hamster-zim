#!/usr/bin/python3
import calendar 
import datetime
import dbus
import os
import os.path
import sys
import yaml


def mapping(path):
    projects = yaml.load(open(os.environ['HOME'] + '/.config/hamster-projects.yaml'), Loader=yaml.BaseLoader)
    pathes = path.split('/')

    # find folder
    for name in reversed(pathes):
        name = name.lower()
        if name in projects:
            return projects[name]
    # find the base filename
    basename = os.path.splitext(path)[0]
    for name in basename.split('_'):
        name = name.lower()
        if name in projects:
            return projects[name]

    return "Zone Out@Personal"

def validate(fact):
    hamster = dbus.SessionBus().get_object('org.gnome.Hamster', '/org/gnome/Hamster')
    (activity, category) = fact.split("@")
    cid = hamster.GetCategoryId(category)
    if cid == 0:
        raise Exception("catetory {} not found".format(category))

    activityDict = hamster.GetActivityByName(activity, cid, False)
    if 'id' not in activityDict:
        hamster.AddActivity(activity, category)
        pass


if __name__ == "__main__":
    # /home/chihchun/workspace/zim/hamster-scripts/hamster-zim %s %t
    # %s real page source
    # %t selected text

    argv=sys.argv
    if(not argv[2:]):
        print("%s: page text" % argv[0])
        raise Exception("hamster-zim %s %t")
    fact = mapping(argv[1])
    description = argv[2]

    hamster = dbus.SessionBus().get_object('org.gnome.Hamster', '/org/gnome/Hamster')
    validate(fact)
    hamster.AddFact('%s,, %s' % (fact, description), calendar.timegm(datetime.datetime.now().timetuple()), 0, False)